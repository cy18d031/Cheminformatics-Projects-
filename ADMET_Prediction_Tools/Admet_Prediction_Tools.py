# -*- coding: utf-8 -*-
"""ADMET_Prediction_Tools.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gWLnfzhDbozK-jWT5YGNVo-o6OriH2_Q
"""

import pandas as pd
import numpy as np
from rdkit import Chem
from rdkit.Chem import Descriptors
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# -----------------------------
# Example dataset (SMILES + toxicity label)
# -----------------------------
data = {
    "smiles": [
        "CCO",       # ethanol
        "CCCC",      # butane
        "CC(=O)O",   # acetic acid
        "CCN(CC)CC", # triethylamine
        "C1=CC=CC=C1" # benzene
    ],
    "toxic": [0, 0, 0, 1, 1]   # labels: 0 = non-toxic, 1 = toxic
}
df = pd.DataFrame(data)

# -----------------------------
# Compute descriptors
# -----------------------------
def calc_rdkit_desc(smiles):
    mol = Chem.MolFromSmiles(smiles)
    if mol:
        return [func(mol) for _, func in Descriptors.descList]
    else:
        return None

desc_names = [name for name, _ in Descriptors.descList]
desc_data = [calc_rdkit_desc(smi) for smi in df['smiles']]
desc_df = pd.DataFrame(desc_data, columns=desc_names)

# -----------------------------
# Build dataset
# -----------------------------
X = desc_df.fillna(0)
y = df['toxic']

# -----------------------------
# Train model
# -----------------------------
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=200, random_state=42)
model.fit(X_train, y_train)

# -----------------------------
# Evaluate
# -----------------------------
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))